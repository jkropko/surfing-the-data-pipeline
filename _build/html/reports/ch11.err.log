Traceback (most recent call last):
  File "/Users/jk8sd/.pyenv/versions/3.12.5/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/jk8sd/.pyenv/versions/3.12.5/lib/python3.12/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/jk8sd/.pyenv/versions/3.12.5/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/jk8sd/.pyenv/versions/3.12.5/lib/python3.12/asyncio/base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/jk8sd/.pyenv/versions/3.12.5/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Users/jk8sd/.pyenv/versions/3.12.5/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/jk8sd/.pyenv/versions/3.12.5/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
plt.figure(figsize=(10, 6))
sns.barplot(x='index', y='confecon', data=mybars_df)
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[13], line 2[0m
[1;32m      1[0m plt[38;5;241m.[39mfigure(figsize[38;5;241m=[39m([38;5;241m10[39m, [38;5;241m6[39m))
[0;32m----> 2[0m [43msns[49m[38;5;241;43m.[39;49m[43mbarplot[49m[43m([49m[43mx[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mindex[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43my[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mconfecon[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43mdata[49m[38;5;241;43m=[39;49m[43mmybars_df[49m[43m)[49m

File [0;32m~/.pyenv/versions/3.12.5/lib/python3.12/site-packages/seaborn/categorical.py:2341[0m, in [0;36mbarplot[0;34m(data, x, y, hue, order, hue_order, estimator, errorbar, n_boot, seed, units, weights, orient, color, palette, saturation, fill, hue_norm, width, dodge, gap, log_scale, native_scale, formatter, legend, capsize, err_kws, ci, errcolor, errwidth, ax, **kwargs)[0m
[1;32m   2338[0m [38;5;28;01mif[39;00m estimator [38;5;129;01mis[39;00m [38;5;28mlen[39m:
[1;32m   2339[0m     estimator [38;5;241m=[39m [38;5;124m"[39m[38;5;124msize[39m[38;5;124m"[39m
[0;32m-> 2341[0m p [38;5;241m=[39m [43m_CategoricalAggPlotter[49m[43m([49m
[1;32m   2342[0m [43m    [49m[43mdata[49m[38;5;241;43m=[39;49m[43mdata[49m[43m,[49m
[1;32m   2343[0m [43m    [49m[43mvariables[49m[38;5;241;43m=[39;49m[38;5;28;43mdict[39;49m[43m([49m[43mx[49m[38;5;241;43m=[39;49m[43mx[49m[43m,[49m[43m [49m[43my[49m[38;5;241;43m=[39;49m[43my[49m[43m,[49m[43m [49m[43mhue[49m[38;5;241;43m=[39;49m[43mhue[49m[43m,[49m[43m [49m[43munits[49m[38;5;241;43m=[39;49m[43munits[49m[43m,[49m[43m [49m[43mweight[49m[38;5;241;43m=[39;49m[43mweights[49m[43m)[49m[43m,[49m
[1;32m   2344[0m [43m    [49m[43morder[49m[38;5;241;43m=[39;49m[43morder[49m[43m,[49m
[1;32m   2345[0m [43m    [49m[43morient[49m[38;5;241;43m=[39;49m[43morient[49m[43m,[49m
[1;32m   2346[0m [43m    [49m[43mcolor[49m[38;5;241;43m=[39;49m[43mcolor[49m[43m,[49m
[1;32m   2347[0m [43m    [49m[43mlegend[49m[38;5;241;43m=[39;49m[43mlegend[49m[43m,[49m
[1;32m   2348[0m [43m[49m[43m)[49m
[1;32m   2350[0m [38;5;28;01mif[39;00m ax [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m   2351[0m     ax [38;5;241m=[39m plt[38;5;241m.[39mgca()

File [0;32m~/.pyenv/versions/3.12.5/lib/python3.12/site-packages/seaborn/categorical.py:67[0m, in [0;36m_CategoricalPlotter.__init__[0;34m(self, data, variables, order, orient, require_numeric, color, legend)[0m
[1;32m     56[0m [38;5;28;01mdef[39;00m [38;5;21m__init__[39m(
[1;32m     57[0m     [38;5;28mself[39m,
[1;32m     58[0m     data[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[0;32m   (...)[0m
[1;32m     64[0m     legend[38;5;241m=[39m[38;5;124m"[39m[38;5;124mauto[39m[38;5;124m"[39m,
[1;32m     65[0m ):
[0;32m---> 67[0m     [38;5;28;43msuper[39;49m[43m([49m[43m)[49m[38;5;241;43m.[39;49m[38;5;21;43m__init__[39;49m[43m([49m[43mdata[49m[38;5;241;43m=[39;49m[43mdata[49m[43m,[49m[43m [49m[43mvariables[49m[38;5;241;43m=[39;49m[43mvariables[49m[43m)[49m
[1;32m     69[0m     [38;5;66;03m# This method takes care of some bookkeeping that is necessary because the[39;00m
[1;32m     70[0m     [38;5;66;03m# original categorical plots (prior to the 2021 refactor) had some rules that[39;00m
[1;32m     71[0m     [38;5;66;03m# don't fit exactly into VectorPlotter logic. It may be wise to have a second[39;00m
[0;32m   (...)[0m
[1;32m     76[0m     [38;5;66;03m# default VectorPlotter rules. If we do decide to make orient part of the[39;00m
[1;32m     77[0m     [38;5;66;03m# _base variable assignment, we'll want to figure out how to express that.[39;00m
[1;32m     78[0m     [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39minput_format [38;5;241m==[39m [38;5;124m"[39m[38;5;124mwide[39m[38;5;124m"[39m [38;5;129;01mand[39;00m orient [38;5;129;01min[39;00m [[38;5;124m"[39m[38;5;124mh[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124my[39m[38;5;124m"[39m]:

File [0;32m~/.pyenv/versions/3.12.5/lib/python3.12/site-packages/seaborn/_base.py:634[0m, in [0;36mVectorPlotter.__init__[0;34m(self, data, variables)[0m
[1;32m    629[0m [38;5;66;03m# var_ordered is relevant only for categorical axis variables, and may[39;00m
[1;32m    630[0m [38;5;66;03m# be better handled by an internal axis information object that tracks[39;00m
[1;32m    631[0m [38;5;66;03m# such information and is set up by the scale_* methods. The analogous[39;00m
[1;32m    632[0m [38;5;66;03m# information for numeric axes would be information about log scales.[39;00m
[1;32m    633[0m [38;5;28mself[39m[38;5;241m.[39m_var_ordered [38;5;241m=[39m {[38;5;124m"[39m[38;5;124mx[39m[38;5;124m"[39m: [38;5;28;01mFalse[39;00m, [38;5;124m"[39m[38;5;124my[39m[38;5;124m"[39m: [38;5;28;01mFalse[39;00m}  [38;5;66;03m# alt., used DefaultDict[39;00m
[0;32m--> 634[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43massign_variables[49m[43m([49m[43mdata[49m[43m,[49m[43m [49m[43mvariables[49m[43m)[49m
[1;32m    636[0m [38;5;66;03m# TODO Lots of tests assume that these are called to initialize the[39;00m
[1;32m    637[0m [38;5;66;03m# mappings to default values on class initialization. I'd prefer to[39;00m
[1;32m    638[0m [38;5;66;03m# move away from that and only have a mapping when explicitly called.[39;00m
[1;32m    639[0m [38;5;28;01mfor[39;00m var [38;5;129;01min[39;00m [[38;5;124m"[39m[38;5;124mhue[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124msize[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mstyle[39m[38;5;124m"[39m]:

File [0;32m~/.pyenv/versions/3.12.5/lib/python3.12/site-packages/seaborn/_base.py:679[0m, in [0;36mVectorPlotter.assign_variables[0;34m(self, data, variables)[0m
[1;32m    674[0m [38;5;28;01melse[39;00m:
[1;32m    675[0m     [38;5;66;03m# When dealing with long-form input, use the newer PlotData[39;00m
[1;32m    676[0m     [38;5;66;03m# object (internal but introduced for the objects interface)[39;00m
[1;32m    677[0m     [38;5;66;03m# to centralize / standardize data consumption logic.[39;00m
[1;32m    678[0m     [38;5;28mself[39m[38;5;241m.[39minput_format [38;5;241m=[39m [38;5;124m"[39m[38;5;124mlong[39m[38;5;124m"[39m
[0;32m--> 679[0m     plot_data [38;5;241m=[39m [43mPlotData[49m[43m([49m[43mdata[49m[43m,[49m[43m [49m[43mvariables[49m[43m)[49m
[1;32m    680[0m     frame [38;5;241m=[39m plot_data[38;5;241m.[39mframe
[1;32m    681[0m     names [38;5;241m=[39m plot_data[38;5;241m.[39mnames

File [0;32m~/.pyenv/versions/3.12.5/lib/python3.12/site-packages/seaborn/_core/data.py:58[0m, in [0;36mPlotData.__init__[0;34m(self, data, variables)[0m
[1;32m     51[0m [38;5;28;01mdef[39;00m [38;5;21m__init__[39m(
[1;32m     52[0m     [38;5;28mself[39m,
[1;32m     53[0m     data: DataSource,
[1;32m     54[0m     variables: [38;5;28mdict[39m[[38;5;28mstr[39m, VariableSpec],
[1;32m     55[0m ):
[1;32m     57[0m     data [38;5;241m=[39m handle_data_source(data)
[0;32m---> 58[0m     frame, names, ids [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_assign_variables[49m[43m([49m[43mdata[49m[43m,[49m[43m [49m[43mvariables[49m[43m)[49m
[1;32m     60[0m     [38;5;28mself[39m[38;5;241m.[39mframe [38;5;241m=[39m frame
[1;32m     61[0m     [38;5;28mself[39m[38;5;241m.[39mnames [38;5;241m=[39m names

File [0;32m~/.pyenv/versions/3.12.5/lib/python3.12/site-packages/seaborn/_core/data.py:232[0m, in [0;36mPlotData._assign_variables[0;34m(self, data, variables)[0m
[1;32m    230[0m     [38;5;28;01melse[39;00m:
[1;32m    231[0m         err [38;5;241m+[39m[38;5;241m=[39m [38;5;124m"[39m[38;5;124mAn entry with this name does not appear in `data`.[39m[38;5;124m"[39m
[0;32m--> 232[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(err)
[1;32m    234[0m [38;5;28;01melse[39;00m:
[1;32m    235[0m 
[1;32m    236[0m     [38;5;66;03m# Otherwise, assume the value somehow represents data[39;00m
[1;32m    237[0m 
[1;32m    238[0m     [38;5;66;03m# Ignore empty data structures[39;00m
[1;32m    239[0m     [38;5;28;01mif[39;00m [38;5;28misinstance[39m(val, Sized) [38;5;129;01mand[39;00m [38;5;28mlen[39m(val) [38;5;241m==[39m [38;5;241m0[39m:

[0;31mValueError[0m: Could not interpret value `index` for `x`. An entry with this name does not appear in `data`.

